
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOleftYleftOP_MASOP_MENOSleftOP_MULTIOP_DIVBOLEAN CADENA COMA COMILLADOBLE COMILLASIMPLE CORFIN CORIN DECIMAL DIFERENTE DOSPUNTOS ENTERO FALSO FUNCION IMPRIMIR LLAFIN LLAIN MIENTRAS NUMDECIMAL NUMENTERO O OP_DIV OP_IGUAL OP_MAS OP_MENOS OP_MULTI PALABRA PARA PARFIN PARIN PUNTO PUNTOCOMA RETORNAR SI SIGDOBLEIGUAL SIGMAYOR SIGMAYORIGUAL SIGMENOR SIGMENORIGUAL SINO VARIABLE VERDADERO Yprograma : lista_instruccioneslista_instrucciones : lista_instrucciones instruccion\n                           | instruccioninstruccion : VARIABLE OP_IGUAL expresion PUNTOCOMAexpresion : expresion OP_MAS termino\n                 | expresion OP_MENOS termino\n                 | terminotermino : NUMENTERO\n               | NUMDECIMAL\n               | VARIABLE\n               | PALABRAinstruccion : SI PARIN condicion PARFIN LLAIN lista_instrucciones LLAFIN\n                   | SI PARIN condicion PARFIN LLAIN lista_instrucciones LLAFIN SINO LLAIN lista_instrucciones LLAFINinstruccion : MIENTRAS PARIN condicion PARFIN LLAIN lista_instrucciones LLAFINcondicion : expresion SIGDOBLEIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion SIGMENOR expresion\n                 | expresion SIGMAYOR expresion\n                 | expresion SIGMENORIGUAL expresion\n                 | expresion SIGMAYORIGUAL expresion\n                 | expresion O expresion\n                 | expresion Y expresion'
    
_lr_action_items = {'VARIABLE':([0,2,3,7,8,9,10,20,21,22,24,25,26,27,28,29,30,31,35,44,45,46,47,48,50,51,52,],[4,4,-3,-2,11,11,11,-4,11,11,11,11,11,11,11,11,11,11,4,4,4,4,-12,-14,4,4,-13,]),'SI':([0,2,3,7,20,35,44,45,46,47,48,50,51,52,],[5,5,-3,-2,-4,5,5,5,5,-12,-14,5,5,-13,]),'MIENTRAS':([0,2,3,7,20,35,44,45,46,47,48,50,51,52,],[6,6,-3,-2,-4,6,6,6,6,-12,-14,6,6,-13,]),'$end':([1,2,3,7,20,47,48,52,],[0,-1,-3,-2,-4,-12,-14,-13,]),'LLAFIN':([3,7,20,45,46,47,48,51,52,],[-3,-2,-4,47,48,-12,-14,52,-13,]),'OP_IGUAL':([4,],[8,]),'PARIN':([5,6,],[9,10,]),'NUMENTERO':([8,9,10,21,22,24,25,26,27,28,29,30,31,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NUMDECIMAL':([8,9,10,21,22,24,25,26,27,28,29,30,31,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'PALABRA':([8,9,10,21,22,24,25,26,27,28,29,30,31,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'PUNTOCOMA':([11,12,13,14,15,16,33,34,],[-10,20,-7,-8,-9,-11,-5,-6,]),'OP_MAS':([11,12,13,14,15,16,18,33,34,36,37,38,39,40,41,42,43,],[-10,21,-7,-8,-9,-11,21,-5,-6,21,21,21,21,21,21,21,21,]),'OP_MENOS':([11,12,13,14,15,16,18,33,34,36,37,38,39,40,41,42,43,],[-10,22,-7,-8,-9,-11,22,-5,-6,22,22,22,22,22,22,22,22,]),'SIGDOBLEIGUAL':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,24,-5,-6,]),'DIFERENTE':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,25,-5,-6,]),'SIGMENOR':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,26,-5,-6,]),'SIGMAYOR':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,27,-5,-6,]),'SIGMENORIGUAL':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,28,-5,-6,]),'SIGMAYORIGUAL':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,29,-5,-6,]),'O':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,30,-5,-6,]),'Y':([11,13,14,15,16,18,33,34,],[-10,-7,-8,-9,-11,31,-5,-6,]),'PARFIN':([11,13,14,15,16,17,19,33,34,36,37,38,39,40,41,42,43,],[-10,-7,-8,-9,-11,23,32,-5,-6,-15,-16,-17,-18,-19,-20,-21,-22,]),'LLAIN':([23,32,49,],[35,44,50,]),'SINO':([47,],[49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_instrucciones':([0,35,44,50,],[2,45,46,51,]),'instruccion':([0,2,35,44,45,46,50,51,],[3,7,3,3,7,7,3,7,]),'expresion':([8,9,10,24,25,26,27,28,29,30,31,],[12,18,18,36,37,38,39,40,41,42,43,]),'termino':([8,9,10,21,22,24,25,26,27,28,29,30,31,],[13,13,13,33,34,13,13,13,13,13,13,13,13,]),'condicion':([9,10,],[17,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_instrucciones','programa',1,'p_programa','pruebashechas.py',144),
  ('lista_instrucciones -> lista_instrucciones instruccion','lista_instrucciones',2,'p_lista_instrucciones','pruebashechas.py',148),
  ('lista_instrucciones -> instruccion','lista_instrucciones',1,'p_lista_instrucciones','pruebashechas.py',149),
  ('instruccion -> VARIABLE OP_IGUAL expresion PUNTOCOMA','instruccion',4,'p_instruccion_asignacion','pruebashechas.py',157),
  ('expresion -> expresion OP_MAS termino','expresion',3,'p_expresion','pruebashechas.py',162),
  ('expresion -> expresion OP_MENOS termino','expresion',3,'p_expresion','pruebashechas.py',163),
  ('expresion -> termino','expresion',1,'p_expresion','pruebashechas.py',164),
  ('termino -> NUMENTERO','termino',1,'p_termino','pruebashechas.py',171),
  ('termino -> NUMDECIMAL','termino',1,'p_termino','pruebashechas.py',172),
  ('termino -> VARIABLE','termino',1,'p_termino','pruebashechas.py',173),
  ('termino -> PALABRA','termino',1,'p_termino','pruebashechas.py',174),
  ('instruccion -> SI PARIN condicion PARFIN LLAIN lista_instrucciones LLAFIN','instruccion',7,'p_instruccion_si','pruebashechas.py',179),
  ('instruccion -> SI PARIN condicion PARFIN LLAIN lista_instrucciones LLAFIN SINO LLAIN lista_instrucciones LLAFIN','instruccion',11,'p_instruccion_si','pruebashechas.py',180),
  ('instruccion -> MIENTRAS PARIN condicion PARFIN LLAIN lista_instrucciones LLAFIN','instruccion',7,'p_instruccion_mientras','pruebashechas.py',188),
  ('condicion -> expresion SIGDOBLEIGUAL expresion','condicion',3,'p_condicion','pruebashechas.py',193),
  ('condicion -> expresion DIFERENTE expresion','condicion',3,'p_condicion','pruebashechas.py',194),
  ('condicion -> expresion SIGMENOR expresion','condicion',3,'p_condicion','pruebashechas.py',195),
  ('condicion -> expresion SIGMAYOR expresion','condicion',3,'p_condicion','pruebashechas.py',196),
  ('condicion -> expresion SIGMENORIGUAL expresion','condicion',3,'p_condicion','pruebashechas.py',197),
  ('condicion -> expresion SIGMAYORIGUAL expresion','condicion',3,'p_condicion','pruebashechas.py',198),
  ('condicion -> expresion O expresion','condicion',3,'p_condicion','pruebashechas.py',199),
  ('condicion -> expresion Y expresion','condicion',3,'p_condicion','pruebashechas.py',200),
]
